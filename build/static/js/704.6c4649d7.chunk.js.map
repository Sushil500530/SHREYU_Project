{"version":3,"file":"static/js/704.6c4649d7.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/TopbarSearch.tsx","components/MaximizeScreen.tsx","components/AppsDropdown/index.tsx","components/SearchDropdown.tsx","components/LanguageDropdown/index.tsx","components/NotificationDropdown.tsx","components/ProfileDropdown.tsx","components/CreateNew.tsx","layouts/Topbar.tsx","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select, { components } from \"react-select\";\nimport classNames from \"classnames\";\n\nimport { groupByFields } from \"../utils\";\n\n// images\nimport Avatar2 from \"../assets/images/users/avatar-2.jpg\";\nimport Avatar5 from \"../assets/images/users/avatar-5.jpg\";\n\ninterface SearchOptions {\n  label: string;\n  icon?: string;\n  type: string;\n  value?: string;\n  userDetails?: {\n    firstname: string;\n    lastname: string;\n    position: string;\n    avatar: string;\n  };\n}\n\n/*\n * get options\n */\nconst optionGetter = (option: SearchOptions) => {\n  switch (option.type) {\n    case \"report\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"help\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"settings\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"title\":\n      return (\n        <div className=\"dropdown-header noti-title p-0\">\n          <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n        </div>\n      );\n    case \"users\":\n      return (\n        <>\n          <Link to=\"#\" className=\"dropdown-item notify-item px-0\">\n            <div className=\"d-flex\">\n              <img\n                src={option.userDetails!.avatar}\n                alt=\"\"\n                className=\"d-flex me-2 rounded-circle\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"drop-username m-0 fs-14\">\n                  {option.userDetails!.firstname} {option.userDetails!.lastname}\n                </h5>\n                <span className=\"user-subinfo fs-12 mb-0\">\n                  {option.userDetails!.position}\n                </span>\n              </div>\n            </div>\n          </Link>\n        </>\n      );\n\n    default:\n      return;\n  }\n};\n\n/*\n * filter options\n */\nconst formateOptions = (options: SearchOptions[]) => {\n  const grouppedData = groupByFields(options, (item: SearchOptions) => {\n    return [item.type];\n  });\n\n  let formattedOptions = [];\n  let count = 0;\n\n  for (let i = 0; i < grouppedData.length; i++) {\n    for (let j = 0; j < grouppedData[i].length; j++) {\n      if (grouppedData[i][j].type === \"users\" && count === 0) {\n        grouppedData[i].splice(j, 0, {\n          label: \"Users\",\n          value: \"title\",\n          type: \"title\",\n        });\n        count = 1;\n      }\n      formattedOptions.push(grouppedData[i][j]);\n    }\n  }\n  return formattedOptions;\n};\n\n/* custon indicator */\nconst IndicatorsContainer = (props: any) => {\n  const { handleClick } = props.selectProps;\n  return (\n    <div style={{}}>\n      <components.IndicatorsContainer {...props}>\n        <button className=\"btn input-group-text\" onMouseDown={handleClick}>\n          <i className=\"uil uil-search\"></i>\n        </button>\n      </components.IndicatorsContainer>\n    </div>\n  );\n};\n\n/* custom menu list */\nconst MenuList = (props: any) => {\n  const { options } = props.selectProps;\n\n  return (\n    <components.MenuList {...props}>\n      {/* menu header */}\n      <div className=\"dropdown-header noti-title\">\n        <h5 className=\"text-overflow mb-2\">Found {options.length} results</h5>\n      </div>\n      {props.children}\n    </components.MenuList>\n  );\n};\n\n/* fomates the option label */\nconst handleFormatOptionLabel = (option: SearchOptions) => {\n  const formattedOption = optionGetter(option);\n  return <div>{formattedOption}</div>;\n};\n\ninterface SearchResultItem {\n  id: number;\n  title: string;\n  redirectTo: string;\n  icon: string;\n}\n\ninterface TopbarSearchProps {\n  items: Array<SearchResultItem>;\n}\n\nconst TopbarSearch = (props: TopbarSearchProps) => {\n  const options: SearchOptions[] = [\n    {\n      value: \"1\",\n      label: \"User profile settings\",\n      icon: \"uil uil-sliders-v-alt\",\n      type: \"settings\",\n    },\n    {\n      value: \"2\",\n      label: \"Analytics Report\",\n      icon: \"uil uil-home-alt\",\n      type: \"report\",\n    },\n    {\n      value: \"3\",\n      label: \"How can I help you?\",\n      icon: \"uil uil-life-ring\",\n      type: \"help\",\n    },\n    {\n      label: \"Shirley Miller\",\n      value: \"users1\",\n      type: \"users\",\n      userDetails: {\n        firstname: \"Shirley\",\n        lastname: \"Miller\",\n        position: \"UI Designer\",\n        avatar: Avatar2,\n      },\n    },\n    {\n      label: \"Timothy Moreno\",\n      value: \"users2\",\n      type: \"users\",\n      userDetails: {\n        firstname: \"Timothy\",\n        lastname: \"Moreno\",\n        position: \"Developer\",\n        avatar: Avatar5,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Select\n        {...props}\n        components={{ IndicatorsContainer, MenuList }}\n        placeholder={\"Search...\"}\n        options={formateOptions(options)}\n        formatOptionLabel={handleFormatOptionLabel}\n        isOptionDisabled={(option) => option.type === \"title\"}\n        maxMenuHeight={350}\n        isSearchable\n        isClearable\n        name=\"search-app\"\n        className=\"app-search\"\n        classNamePrefix=\"react-select\"\n      />\n    </>\n  );\n};\n\nexport default TopbarSearch;\n","import React, { useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport FeatherIcon from \"feather-icons-react\";\n\nconst MaximizeScreen = () => {\n  useEffect(() => {\n    let elem = document.querySelector(\".maximize-icon\");\n\n    if (elem) elem.setAttribute(\"data-toggle\", \"fullscreen\");\n\n    return () => {\n      if (elem) elem.removeAttribute(\"data-toggle\");\n    };\n  }, []);\n\n  /*\n   * toggle full screen mode\n   */\n  const toggleFullscreen = () => {\n    let document: any = window.document;\n    document.body.classList.add(\"fullscreen-enable\");\n\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen();\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n    }\n\n    // handle fullscreen exit\n    const exitHandler = () => {\n      if (\n        !document.webkitIsFullScreen &&\n        !document.mozFullScreen &&\n        !document.msFullscreenElement\n      )\n        document.body.classList.remove(\"fullscreen-enable\");\n    };\n    document.addEventListener(\"fullscreenchange\", exitHandler);\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\n  };\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle\n        as=\"a\"\n        id=\"dropdown-languages\"\n        onClick={toggleFullscreen}\n        className=\"nav-link cursor-pointer arrow-none\"\n      >\n        <FeatherIcon icon=\"maximize\" />\n      </Dropdown.Toggle>\n    </Dropdown>\n  );\n};\n\nexport default MaximizeScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// utils\nimport { splitArray } from \"../../utils/\";\n\n// apps icon\nimport slackIcon from \"./icons/slack.png\";\nimport bitbucketIcon from \"./icons/bitbucket.png\";\nimport dribbbleIcon from \"./icons/dribbble.png\";\nimport dropboxIcon from \"./icons/dropbox.png\";\nimport githubIcon from \"./icons/github.png\";\nimport gSuiteIcon from \"./icons/g-suite.png\";\n\n// get the apps\nconst Apps = [\n  {\n    name: \"Slack\",\n    icon: slackIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"GitHub\",\n    icon: githubIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Dribbble\",\n    icon: dribbbleIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Bitbucket\",\n    icon: bitbucketIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Dropbox\",\n    icon: dropboxIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"G Suite\",\n    icon: gSuiteIcon,\n    redirectTo: \"/\",\n  },\n];\n\nconst AppsDropdown = () => {\n  const apps = Apps || [];\n  const chunk_size = 3;\n  const appsChunks = splitArray(apps, chunk_size);\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle apps-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-apps\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcon icon=\"grid\" />\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"dropdown-lg dropdown-menu-end p-0\">\n        <div className=\"p-1\">\n          {(appsChunks || []).map((chunk, idx) => (\n            <div className=\"row g-0\" key={idx}>\n              {(chunk || []).map((item, i) => (\n                <div className=\"col\" key={i}>\n                  <Link className=\"dropdown-icon-item\" to={item.redirectTo}>\n                    <img src={item.icon} alt=\"\" />\n                    <span>{item.name}</span>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AppsDropdown;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\nconst SearchDropdown = () => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle search-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-apps\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcons icon={\"search\"} />\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"dropdown-menu-animated dropdown-lg p-0\">\n        <form className=\"p-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search ...\"\n          />\n        </form>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default SearchDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\nimport enFlag from \"./flags/us.jpg\";\nimport germanyFlag from \"./flags/germany.jpg\";\nimport italyFlag from \"./flags/italy.jpg\";\nimport spainFlag from \"./flags/spain.jpg\";\nimport russiaFlag from \"./flags/russia.jpg\";\n\n// get the languages\nconst Languages = [\n  {\n    name: \"English\",\n    flag: enFlag,\n  },\n  {\n    name: \"German\",\n    flag: germanyFlag,\n  },\n  {\n    name: \"Italian\",\n    flag: italyFlag,\n  },\n  {\n    name: \"Spanish\",\n    flag: spainFlag,\n  },\n  {\n    name: \"Russian\",\n    flag: russiaFlag,\n  },\n];\n\nconst LanguageDropdown = () => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle language-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-languages\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcon icon=\"globe\" />\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end\">\n        <div onClick={toggleDropdown}>\n          {(Languages || []).map((lang, i) => {\n            return (\n              <Link to=\"/\" className=\"dropdown-item\" key={i + \"-lang\"}>\n                <img\n                  src={lang.flag}\n                  alt={lang.name}\n                  className=\"me-1\"\n                  height=\"12\"\n                />{\" \"}\n                <span className=\"align-middle\">{lang.name}</span>\n              </Link>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default LanguageDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// types\nimport { NotificationItem } from \"../layouts/Topbar\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n  maxHeight: \"230px\",\n  display: \"none\",\n};\n\nconst notificationShowContainerStyle = {\n  maxHeight: \"230px\",\n};\n\ninterface NotificationDropdownProps {\n  notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n  maxHeight?: string;\n  display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n  const [notificationContentStyle, setNotificationContentStyles] =\n    useState<NotificationContainerStyle>(notificationContainerStyle);\n\n  /*\n   * toggle notification-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(\n      notificationContentStyle === notificationContainerStyle\n        ? notificationShowContainerStyle\n        : notificationContainerStyle\n    );\n  };\n\n  /*\n   * get redirect url for notification items\n   */\n  const getRedirectUrl = (item: NotificationItem) => {\n    return `/notification/${item.id}`;\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-notification\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link\",\n          \"position-relative\",\n          \"cursor-pointer\",\n          {\n            show: dropdownOpen,\n          }\n        )}\n      >\n        <FeatherIcon icon=\"bell\" />\n        <span className=\"badge bg-danger rounded-circle noti-icon-badge\">\n          6\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu-end dropdown-lg\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-item noti-title\">\n            <h5 className=\"m-0\">\n              <span className=\"float-end\">\n                <Link to=\"#\" className=\"text-dark\">\n                  <small>Clear All</small>\n                </Link>\n              </span>\n              Notification\n            </h5>\n          </div>\n          <Scrollbar className=\"noti-scroll\" style={notificationContentStyle}>\n            {(props.notifications || []).map((item, i) => {\n              return (\n                <Link\n                  to={getRedirectUrl(item)}\n                  className=\"dropdown-item notify-item border-bottom\"\n                  key={i + \"-noti\"}\n                >\n                  {item.avatar ? (\n                    <>\n                      <div className=\"notify-icon\">\n                        <img\n                          src={item.avatar}\n                          alt=\"\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </div>\n                      <p className=\"notify-details\">{item.text}</p>\n                      <p className=\"text-muted mb-0 user-msg\">\n                        <small>{item.subText}</small>\n                      </p>\n                    </>\n                  ) : (\n                    <>\n                      <div className={`notify-icon bg-${item.bgColor}`}>\n                        <i className={item.icon}></i>\n                      </div>\n                      <p className=\"notify-details\">\n                        {item.text}{\" \"}\n                        <small className=\"text-muted\">{item.subText}</small>\n                      </p>\n                    </>\n                  )}\n                </Link>\n              );\n            })}\n          </Scrollbar>\n\n          <Link\n            to=\"/\"\n            className=\"dropdown-item text-center text-primary notify-item notify-all\"\n          >\n            View All <i className=\"fe-arrow-right\"></i>\n          </Link>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NotificationDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\ninterface ProfileMenuItem {\n  label: string;\n  icon: string;\n  redirectTo: string;\n}\n\ninterface ProfileDropdownProps {\n  menuItems: Array<ProfileMenuItem>;\n  profilePic?: string;\n  username: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n  const profilePic = props.profilePic || null;\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle profile-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-profile\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link\",\n          \"nav-user\",\n          \"me-0\",\n          \"cursor-pointer\",\n          { show: dropdownOpen }\n        )}\n      >\n        <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />\n        <span className=\"pro-user-name ms-2\">\n          {props.username} <i className=\"uil uil-angle-down\"></i>\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu-end profile-dropdown\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-header noti-title\">\n            <h6 className=\"text-overflow m-0\">Welcome !</h6>\n          </div>\n          {(props.menuItems || []).map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i === props.menuItems.length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={i + \"-profile-menu\"}\n                >\n                  <FeatherIcon\n                    icon={item.icon}\n                    className=\"icon-dual icon-xs me-1\"\n                  />\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default ProfileDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface CreateNewProps {\n  otherOptions: {\n    id: number;\n    label: string;\n    icon: string;\n  }[];\n}\n\nconst CreateNew = ({ otherOptions }: CreateNewProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <>\n      <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n        <Dropdown.Toggle\n          id=\"dropdown-notification\"\n          as=\"a\"\n          onClick={toggleDropdown}\n          className={classNames(\"nav-link\", \"cursor-pointer\", {\n            show: dropdownOpen,\n          })}\n        >\n          Create New <i className=\"uil uil-angle-down\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"dropdown-menu\">\n          <div onClick={toggleDropdown}>\n            {(otherOptions || []).map((item, index) => {\n              return (\n                <React.Fragment key={index}>\n                  {index === otherOptions.length - 1 && (\n                    <div className=\"dropdown-divider\"></div>\n                  )}\n                  <Link key={index} to=\"#\" className=\"dropdown-item\">\n                    <i className={classNames(item.icon, \"me-1\")}></i>\n                    <span>{item.label}</span>\n                  </Link>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default CreateNew;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// actions\nimport { showRightSidebar, changeSidebarType } from \"../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../redux/store\";\n\n//constants\nimport { LayoutTypes, SideBarTypes } from \"../constants/layout\";\n\n// components\nimport TopbarSearch from \"../components/TopbarSearch\";\nimport MaximizeScreen from \"../components/MaximizeScreen\";\nimport AppsDropdown from \"../components/AppsDropdown/\";\nimport SearchDropdown from \"../components/SearchDropdown\";\nimport LanguageDropdown from \"../components/LanguageDropdown\";\nimport NotificationDropdown from \"../components/NotificationDropdown\";\nimport ProfileDropdown from \"../components/ProfileDropdown\";\nimport CreateNew from \"../components/CreateNew\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\nimport avatar4 from \"../assets/images/users/avatar-4.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\n\nexport interface NotificationItem {\n  id: number;\n  text: string;\n  subText: string;\n  icon?: string;\n  avatar?: string;\n  bgColor?: string;\n}\n\n// get the notifications\nconst Notifications: NotificationItem[] = [\n  {\n    id: 1,\n    text: \"Cristina Pride\",\n    subText: \"Hi, How are you? What about our next meeting\",\n    avatar: profilePic,\n  },\n  {\n    id: 2,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"uil uil-comment-message\",\n    bgColor: \"primary\",\n  },\n  {\n    id: 3,\n    text: \"Karen Robinson\",\n    subText: \"Wow ! this admin looks good and awesome design\",\n    avatar: avatar4,\n  },\n  {\n    id: 4,\n    text: \"New user registered.\",\n    subText: \"5 hours ago\",\n    icon: \"uil uil-user-plus\",\n    bgColor: \"warning\",\n  },\n  {\n    id: 5,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"uil uil-comment-message\",\n    bgColor: \"info\",\n  },\n  {\n    id: 6,\n    text: \"Carlos Crouch liked Admin\",\n    subText: \"13 days ago\",\n    icon: \"uil uil-heart\",\n    bgColor: \"secondary\",\n  },\n];\n\n// get the profilemenu\nconst ProfileMenus = [\n  {\n    label: \"My Account\",\n    icon: \"user\",\n    redirectTo: \"/\",\n  },\n  {\n    label: \"Lock Screen\",\n    icon: \"lock\",\n    redirectTo: \"/auth/lock-screen\",\n  },\n  {\n    label: \"Logout\",\n    icon: \"log-out\",\n    redirectTo: \"/auth/logout\",\n  },\n];\n\n// dummy search results\nconst SearchResults = [\n  {\n    id: 1,\n    title: \"Analytics Report\",\n    icon: \"uil-notes\",\n    redirectTo: \"/\",\n  },\n  {\n    id: 2,\n    title: \"How can I help you?\",\n    icon: \"uil-life-ring\",\n    redirectTo: \"/\",\n  },\n  {\n    id: 3,\n    icon: \"uil-cog\",\n    title: \"User profile settings\",\n    redirectTo: \"/\",\n  },\n];\n\nconst otherOptions = [\n  {\n    id: 1,\n    label: \"New Projects\",\n    icon: \"uil uil-bag\",\n  },\n  {\n    id: 2,\n    label: \"Create Users\",\n    icon: \"uil uil-user-plus\",\n  },\n  {\n    id: 3,\n    label: \"Revenue Report\",\n    icon: \"uil uil-chart-pie\",\n  },\n  {\n    id: 4,\n    label: \"Settings\",\n    icon: \"uil uil-cog\",\n  },\n  {\n    id: 4,\n    label: \"Help & Support\",\n    icon: \"uil uil-question-circle\",\n  },\n];\n\ninterface TopbarProps {\n  hideLogo?: boolean;\n  navCssClasses?: string;\n  openLeftMenuCallBack?: () => void;\n  topbarDark?: boolean;\n}\n\nconst Topbar = ({\n  hideLogo,\n  navCssClasses,\n  openLeftMenuCallBack,\n  topbarDark,\n}: TopbarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [isopen, setIsopen] = useState<boolean>(false);\n\n  const navbarCssClasses: string = navCssClasses || \"\";\n  const containerCssClasses: string = !hideLogo ? \"container-fluid\" : \"\";\n\n  const { layoutType, leftSideBarType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /**\n   * Toggle the leftmenu when having mobile screen\n   */\n  const handleLeftMenuCallBack = () => {\n    setIsopen(!isopen);\n    if (openLeftMenuCallBack) openLeftMenuCallBack();\n  };\n\n  /**\n   * Toggles the right sidebar\n   */\n  const handleRightSideBar = () => {\n    dispatch(showRightSidebar());\n  };\n\n  /**\n   * Toggles the left sidebar width\n   */\n  const toggleLeftSidebarWidth = () => {\n    if (leftSideBarType === \"default\" || leftSideBarType === \"compact\")\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n    if (leftSideBarType === \"condensed\")\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n  };\n\n  return (\n    <React.Fragment>\n      <div className={`navbar-custom ${navbarCssClasses}`}>\n        <div className={containerCssClasses}>\n          {!hideLogo && (\n            <div className=\"logo-box\">\n              <Link to=\"/\" className=\"logo logo-dark\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"24\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoDark} alt=\"\" height=\"24\" />\n                </span>\n              </Link>\n              <Link to=\"/\" className=\"logo logo-light\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"24\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoLight} alt=\"\" height=\"24\" />\n                </span>\n              </Link>\n            </div>\n          )}\n\n          <ul className=\"list-unstyled topnav-menu float-end mb-0\">\n            <li className=\"d-none d-lg-block\">\n              <TopbarSearch items={SearchResults} />\n            </li>\n\n            <li className=\"dropdown d-inline-block d-lg-none\">\n              <SearchDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block\">\n              <MaximizeScreen />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <AppsDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <LanguageDropdown />\n            </li>\n            <li className=\"dropdown notification-list topbar-dropdown\">\n              <NotificationDropdown notifications={Notifications} />\n            </li>\n            <li className=\"dropdown notification-list topbar-dropdown\">\n              <ProfileDropdown\n                profilePic={profilePic}\n                menuItems={ProfileMenus}\n                username={\"Nik Patel\"}\n              />\n            </li>\n            <li className=\"dropdown notification-list\">\n              <button\n                className=\"nav-link right-bar-toggle arrow-none btn btn-link shadow-none\"\n                onClick={handleRightSideBar}\n              >\n                <FeatherIcon icon=\"settings\" />\n              </button>\n            </li>\n          </ul>\n\n          <ul className=\"list-unstyled topnav-menu topnav-menu-left m-0\">\n            {layoutType !== LayoutTypes.LAYOUT_HORIZONTAL && (\n              <li>\n                <button\n                  className=\"button-menu-mobile d-none d-lg-block\"\n                  onClick={toggleLeftSidebarWidth}\n                >\n                  <FeatherIcon icon=\"menu\" />\n                  <i className=\"fe-menu\"></i>\n                </button>\n              </li>\n            )}\n\n            <li>\n              <button\n                className=\"button-menu-mobile d-lg-none d-bolck\"\n                onClick={handleLeftMenuCallBack}\n              >\n                <FeatherIcon icon=\"menu\" />\n              </button>\n            </li>\n\n            {/* Mobile menu toggle (Horizontal Layout) */}\n            <li>\n              <Link\n                to=\"#\"\n                className={classNames(\"navbar-toggle nav-link\", {\n                  open: isopen,\n                })}\n                onClick={handleLeftMenuCallBack}\n              >\n                <div className=\"lines\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </Link>\n            </li>\n\n            <li className=\"dropdown d-none d-xl-block\">\n              <CreateNew otherOptions={otherOptions} />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Topbar;\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}"],"names":["_ref","className","style","children","otherProps","_jsx","SimpleBar","formateOptions","options","grouppedData","groupByFields","item","type","formattedOptions","count","i","length","j","splice","label","value","push","IndicatorsContainer","props","handleClick","selectProps","components","onMouseDown","MenuList","_jsxs","handleFormatOptionLabel","option","formattedOption","Link","to","classNames","icon","_Fragment","src","userDetails","avatar","alt","height","firstname","lastname","position","optionGetter","Avatar2","Avatar5","Select","placeholder","formatOptionLabel","isOptionDisabled","maxMenuHeight","isSearchable","isClearable","name","classNamePrefix","MaximizeScreen","useEffect","elem","document","querySelector","setAttribute","removeAttribute","Dropdown","as","id","onClick","toggleFullscreen","window","body","classList","add","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitHandler","webkitIsFullScreen","mozFullScreen","msFullscreenElement","remove","addEventListener","FeatherIcon","Apps","redirectTo","AppsDropdown","apps","appsChunks","splitArray","dropdownOpen","setDropdownOpen","useState","toggleDropdown","show","onToggle","map","chunk","idx","SearchDropdown","FeatherIcons","Languages","flag","LanguageDropdown","lang","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","notificationContentStyle","setNotificationContentStyles","getRedirectUrl","concat","Scrollbar","notifications","text","subText","bgColor","profilePic","username","menuItems","React","otherOptions","index","Notifications","avatar4","ProfileMenus","SearchResults","title","hideLogo","navCssClasses","openLeftMenuCallBack","topbarDark","dispatch","useDispatch","isopen","setIsopen","navbarCssClasses","containerCssClasses","layoutType","leftSideBarType","useSelector","state","Layout","handleLeftMenuCallBack","logoSm","logoDark","logoLight","TopbarSearch","items","NotificationDropdown","ProfileDropdown","handleRightSideBar","showRightSidebar","LayoutTypes","toggleLeftSidebarWidth","changeSidebarType","SideBarTypes","open","CreateNew","isReactNative","global","navigator","product","useLayoutEffect","WeakMap","_excluded","Anchor","ref","onKeyDown","source","excluded","key","target","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","useEventCallback","e","href","trim","role","displayName","_ref2","disabled","rel","tabIndex","meta","event","isTrivialHref","preventDefault","stopPropagation","undefined","Button","asProp","Component","useCallbackRef","useRef","current","fn","useCommittedRef","useCallback","apply","arguments","useEventListener","eventTarget","listener","capture","handler","removeEventListener","useGlobalListener","documentTarget","useMounted","mounted","isMounted","usePrevious"],"sourceRoot":""}