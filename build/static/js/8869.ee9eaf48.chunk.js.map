{"version":3,"file":"static/js/8869.ee9eaf48.chunk.js","mappings":"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","sources":["pages/dashboard/RolesAndUsers/Roles/data.tsx","pages/dashboard/RolesAndUsers/Roles/CustomRoleShowTable.tsx","pages/dashboard/RolesAndUsers/Roles/RoleTable.tsx","pages/dashboard/RolesAndUsers/Roles/index.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js"],"sourcesContent":["interface Records {\r\n    id: number;\r\n    roleName: string;\r\n  }\r\n  \r\n  const records: Records[] = [\r\n    {\r\n      id: 1593914720,\r\n      roleName: \"Burt\",\r\n    },\r\n    {\r\n      id: 1593911520,\r\n      roleName: \"Bruno\",\r\n    },\r\n    {\r\n      id: 1593914520,\r\n      roleName: \"Alvarado\",\r\n    },\r\n    {\r\n      id: 1593914745,\r\n      roleName: \"Lilia\",\r\n    },\r\n    {\r\n      id: 1593914125,\r\n      roleName: \"Amanda\",\r\n    },\r\n    {\r\n      id: 15939147154,\r\n      roleName: \"Alexandra\",\r\n    },\r\n    {\r\n      id: 457425445,\r\n      roleName: \"Diana\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Goodman\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Edith\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Juana\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Fitzgerald\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Madden\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Jewell\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Kerr\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Washington\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Audrey\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Allison\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Holder\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Atkinson\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Delaney\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Myrna\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Erna\",\r\n    },\r\n    {\r\n      id:15939147154,\r\n      roleName: \"Fannie\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Melody\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Letitia\",\r\n    },\r\n    {\r\n      id: 15939147154,\r\n      roleName: \"Nina\",\r\n    },\r\n    {\r\n      id: 1593914720,\r\n      roleName: \"Byrd\",\r\n    },\r\n    {\r\n      id: 15939147154,\r\n      roleName: \"Chen\",\r\n    },\r\n    {\r\n      id: 15939147114,\r\n      roleName: \"Alexandria\",\r\n    },\r\n    {\r\n      id: 15939147154,\r\n      roleName: \"Page\",\r\n    },\r\n    {\r\n      id:1593915432,\r\n      roleName: \"Clare\",\r\n    },\r\n    {\r\n      id:1593915432,\r\n      roleName: \"Lindsey\",\r\n    },\r\n    {\r\n      id:1593915432,\r\n      roleName: \"Oconnor\",\r\n    },\r\n    {\r\n      id:1593915432,\r\n      roleName: \"Maldonado\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Day\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Collier\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Jeannette\",\r\n    },\r\n    {\r\n      id:1593914520,\r\n      roleName: \"Wallace\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Mcfadden\",\r\n    },\r\n    {\r\n      id:1593914720,\r\n      roleName: \"Chrystal\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Leila\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Madelyn\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Peck\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Garrett\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Kramer\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Lane\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Merritt\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Margarita\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Leigh\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Coleman\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Alexander\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Tanisha\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Crane\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Carmella\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Rosalind\",\r\n    },\r\n    {\r\n      id:159254564720,\r\n      roleName: \"Duran\",\r\n    },\r\n    {\r\n      id:159254564,\r\n      roleName: \"Bernard\",\r\n    },\r\n    {\r\n      id:159254564,\r\n      roleName: \"Tate\",\r\n    },\r\n    {\r\n      id:159254564,\r\n      roleName: \"Pearlie\",\r\n    },\r\n    {\r\n      id:159254564,\r\n      roleName: \"Manning\",\r\n    },\r\n  ];\r\n  \r\n  export { records };\r\n  ","import React, { useRef, useEffect, forwardRef, useState } from \"react\";\r\nimport {\r\n    useTable,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    useGlobalFilter,\r\n    useAsyncDebounce,\r\n    useExpanded,\r\n} from \"react-table\";\r\nimport classNames from \"classnames\";\r\n\r\n// components\r\nimport { Button } from \"react-bootstrap\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\n\r\ninterface GlobalFilterProps {\r\n    preGlobalFilteredRows: any;\r\n    globalFilter: any;\r\n    setGlobalFilter: any;\r\n    searchBoxClass: any;\r\n}\r\n\r\n// Define a default UI for filtering\r\nconst GlobalFilter = ({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n    searchBoxClass,\r\n}: GlobalFilterProps) => {\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = useState<any>(globalFilter);\r\n    const onChange = useAsyncDebounce((value) => {\r\n        setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n        <div className={classNames(searchBoxClass)}>\r\n            <span className=\"d-flex align-items-center\">\r\n                Search :{\" \"}\r\n                <input\r\n                    type=\"search\"\r\n                    value={value || \"\"}\r\n                    onChange={(e: any) => {\r\n                        setValue(e.target.value);\r\n                        onChange(e.target.value);\r\n                    }}\r\n                    placeholder={`${count} records...`}\r\n                    className=\"form-control w-auto ms-1\"\r\n                />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface IndeterminateCheckboxProps {\r\n    indeterminate: any;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst IndeterminateCheckbox = forwardRef<\r\n    HTMLInputElement,\r\n    IndeterminateCheckboxProps\r\n>(({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = useRef();\r\n    const resolvedRef: any = ref || defaultRef;\r\n\r\n    useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"form-check\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    className=\"form-check-input\"\r\n                    ref={resolvedRef}\r\n                    {...rest}\r\n                />\r\n                <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\ninterface TableProps {\r\n    isSearchable?: boolean;\r\n    isSortable?: boolean;\r\n    pagination?: boolean;\r\n    isSelectable?: boolean;\r\n    isExpandable?: boolean;\r\n    sizePerPageList?: {\r\n        text: string;\r\n        value: number;\r\n    }[];\r\n    columns: {\r\n        Header: string;\r\n        accessor: string;\r\n        sort?: boolean;\r\n        Cell?: any;\r\n        className?: string;\r\n    }[];\r\n    data: any[];\r\n    pageSize?: any;\r\n    searchBoxClass?: string;\r\n    tableClass?: string;\r\n    theadClass?: string;\r\n}\r\n\r\nconst CustomRoleShowTable = (props: TableProps) => {\r\n    const isSearchable = props[\"isSearchable\"] || false;\r\n    const isSortable = props[\"isSortable\"] || false;\r\n    const pagination = props[\"pagination\"] || false;\r\n    const isSelectable = props[\"isSelectable\"] || false;\r\n    const isExpandable = props[\"isExpandable\"] || false;\r\n    const sizePerPageList = props[\"sizePerPageList\"] || [];\r\n\r\n    let otherProps: any = {};\r\n\r\n    if (isSearchable) {\r\n        otherProps[\"useGlobalFilter\"] = useGlobalFilter;\r\n    }\r\n    if (isSortable) {\r\n        otherProps[\"useSortBy\"] = useSortBy;\r\n    }\r\n    if (isExpandable) {\r\n        otherProps[\"useExpanded\"] = useExpanded;\r\n    }\r\n    if (pagination) {\r\n        otherProps[\"usePagination\"] = usePagination;\r\n    }\r\n    if (isSelectable) {\r\n        otherProps[\"useRowSelect\"] = useRowSelect;\r\n    }\r\n\r\n    const dataTable = useTable(\r\n        {\r\n            columns: props[\"columns\"],\r\n            data: props[\"data\"],\r\n            initialState: { pageSize: props[\"pageSize\"] || 10 },\r\n        },\r\n        otherProps.hasOwnProperty(\"useGlobalFilter\") &&\r\n        otherProps[\"useGlobalFilter\"],\r\n        otherProps.hasOwnProperty(\"useSortBy\") && otherProps[\"useSortBy\"],\r\n        otherProps.hasOwnProperty(\"useExpanded\") && otherProps[\"useExpanded\"],\r\n        otherProps.hasOwnProperty(\"usePagination\") && otherProps[\"usePagination\"],\r\n        otherProps.hasOwnProperty(\"useRowSelect\") && otherProps[\"useRowSelect\"],\r\n        (hooks) => {\r\n            isSelectable &&\r\n                hooks.visibleColumns.push((columns: any) => [\r\n                    // Let's make a column for selection\r\n                    {\r\n                        id: \"selection\",\r\n                        // The header can use the table's getToggleAllRowsSelectedProps method\r\n                        // to render a checkbox\r\n                        Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                        ),\r\n                        // The cell can use the individual row's getToggleRowSelectedProps method\r\n                        // to the render a checkbox\r\n                        Cell: ({ row }: any) => (\r\n                            <div>\r\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                            </div>\r\n                        ),\r\n                    },\r\n                    ...columns,\r\n                ]);\r\n\r\n            isExpandable &&\r\n                hooks.visibleColumns.push((columns: any) => [\r\n                    // Let's make a column for selection\r\n                    {\r\n                        // Build our expander column\r\n                        id: \"expander\", // Make sure it has an ID\r\n                        Header: ({\r\n                            getToggleAllRowsExpandedProps,\r\n                            isAllRowsExpanded,\r\n                        }: any) => (\r\n                            <span {...getToggleAllRowsExpandedProps()}>\r\n                                {isAllRowsExpanded ? \"-\" : \"+\"}\r\n                            </span>\r\n                        ),\r\n                        Cell: ({ row }) =>\r\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\r\n                            // to build the toggle for expanding a row\r\n                            row.canExpand ? (\r\n                                <span\r\n                                    {...row.getToggleRowExpandedProps({\r\n                                        style: {\r\n                                            // We can even use the row.depth property\r\n                                            // and paddingLeft to indicate the depth\r\n                                            // of the row\r\n                                            paddingLeft: `${row.depth * 2}rem`,\r\n                                        },\r\n                                    })}\r\n                                >\r\n                                    {row.isExpanded ? \"-\" : \"+\"}\r\n                                </span>\r\n                            ) : null,\r\n                    },\r\n                    ...columns,\r\n                ]);\r\n        }\r\n    );\r\n\r\n    let rows = pagination ? dataTable.page : dataTable.rows;\r\n\r\n    return (\r\n        <>\r\n            {isSearchable && (\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\r\n                    globalFilter={dataTable.state.globalFilter}\r\n                    setGlobalFilter={dataTable.setGlobalFilter}\r\n                    searchBoxClass={props[\"searchBoxClass\"]}\r\n                />\r\n            )}\r\n\r\n            <div className=\"table-responsive\">\r\n                <table\r\n                    {...dataTable.getTableProps()}\r\n                    className={classNames(\r\n                        \"table table-centered react-table table-striped table-hover\",\r\n                        props[\"tableClass\"]\r\n                    )} >\r\n                    <thead className=\"bg-primary text-white table-hover\">\r\n                        <tr>\r\n                            <th className=\"border-1\" style={{ width: \"2%\" }}>#</th>\r\n                            <th className=\"border-1\" style={{ width: \"88%\" }}>Role Name</th>\r\n                            <th className=\"border-1\" style={{ width: \"10%\" }}>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody {...dataTable.getTableBodyProps()}>\r\n                        {(rows || []).map((row: any) => {\r\n                            dataTable.prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()}>\r\n                                    <td className=\"border-1\">{row.original.id}</td>\r\n                                    <td className=\"border-1\">{row.original.roleName}</td>\r\n                                    <td className=\"border-1 d-flex align-items-center justify-content-center gap-2\">\r\n                                        <Button variant=\"primary\" className=\"btn-sm d-flex align-items-center justify-content-center \" style={{ width: \"30px\", height: \"30px\", borderRadius: \"100%\" }}>\r\n                                            <i className=\"uil uil-edit\" style={{ fontSize: \"14px\" }}></i>\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" className=\"btn-sm d-flex align-items-center justify-content-center\" style={{ width: \"30px\", height: \"30px\", borderRadius: \"100%\" }}>\r\n                                            <i className=\"uil uil-trash-alt\" style={{ fontSize: \"14px\" }}></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {pagination && (\r\n                <CustomPagination tableProps={dataTable} sizePerPageList={sizePerPageList} />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CustomRoleShowTable;","import { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\n\r\n// components \r\nimport { records as data, } from \"./data\";\r\nimport CustomRoleShowTable from \"./CustomRoleShowTable\";\r\n\r\n\r\n\r\n\r\n// dummy records\r\nconst columns = [\r\n    {\r\n        Header: \"#\",\r\n        accessor: \"#\",\r\n        sort: true,\r\n    },\r\n    {\r\n        Header: \"Role Name\",\r\n        accessor: \"roleName\",\r\n        sort: true,\r\n    },\r\n    {\r\n        Header: \"Action\",\r\n        accessor: \"\",\r\n    },\r\n\r\n];\r\n\r\nconst sizePerPageList = [\r\n    {\r\n        text: \"8\",\r\n        value: 8,\r\n    },\r\n    {\r\n        text: \"15\",\r\n        value: 15,\r\n    },\r\n    {\r\n        text: \"25\",\r\n        value: 25,\r\n    },\r\n    {\r\n        text: \"All\",\r\n        value: data.length,\r\n    },\r\n];\r\nconst RoleTable = () => {\r\n    return (\r\n        <>\r\n            <Card className=\"px-3 border-0\">\r\n                <div className=\"\">\r\n                    <CustomRoleShowTable\r\n                        columns={columns}\r\n                        data={data}\r\n                        pageSize={8}\r\n                        sizePerPageList={sizePerPageList}\r\n                        isSortable={true}\r\n                        pagination={true}\r\n                    />\r\n                </div>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoleTable;\r\n\r\n\r\n// Define a default UI for filtering\r\nexport const GlobalFilter = ({\r\n    setGlobalFilter,\r\n    searchBoxClass,\r\n}: any) => {\r\n    const [value, setValue] = useState<any>();\r\n    const onChange = useAsyncDebounce((value) => {\r\n        setGlobalFilter(value || undefined);\r\n    }, 200);\r\n\r\n    return (\r\n        <div className={classNames(searchBoxClass)}>\r\n            <span className=\"d-flex align-items-center\">\r\n                Search :{\" \"}\r\n                <input\r\n                    type=\"search\"\r\n                    value={value || \"\"}\r\n                    onChange={(e: any) => {\r\n                        setValue(e.target.value);\r\n                        onChange(e.target.value);\r\n                    }}\r\n                    placeholder={` `}\r\n                    className=\"form-control w-auto ms-1\"\r\n                />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, Card, Col, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport PageTitle from \"../../../../components/PageTitle\";\r\nimport MidItemBar from \"../../Contracts/MidItemBar\";\r\nimport RoleTable from \"./RoleTable\";\r\n// components \r\n\r\n\r\n\r\n\r\nconst RolesDashboard = () => {\r\n    const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\r\n    // add task \r\n    const newTask = (status: string, queue: string) => {\r\n        setNewTaskDetails({\r\n            dueDate: new Date(),\r\n            //   userAvatar: [defaultAvatar],\r\n            status: status,\r\n            queue: queue,\r\n        });\r\n        // setNewTaskModal(true);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: \"Dashboard\", path: \"/dashboard/roles-&-users/roles\" },\r\n                    { label: \"Patients\", path: \"/dashboard/roles-&-users/roles\", active: true },\r\n                ]}\r\n                title={\"Roles\"}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"float-sm-start\">\r\n                                <label className=\"form-check-label\">\r\n                                Roles Table\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"float-sm-end\">\r\n                                <Col className=\"text-sm-end mt-sm-0 mt-2\">\r\n                                    <Button onClick={() => newTask(\"Pending\", \"todoTasks\")}>\r\n                                        <i className=\"uil-plus me-1\"></i>Create\r\n                                    </Button>\r\n                                </Col>\r\n                            </div>\r\n                        </Card.Body>\r\n                        <hr className=\"m-0\" />\r\n                        <Card.Body>\r\n                            {/* <PatientsImageLoad /> */}\r\n                        </Card.Body>\r\n                        <MidItemBar />\r\n                        <RoleTable />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RolesDashboard;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["records","id","roleName","GlobalFilter","_ref","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","length","value","setValue","useState","onChange","useAsyncDebounce","undefined","_jsx","className","classNames","children","_jsxs","type","e","target","placeholder","concat","IndeterminateCheckbox","forwardRef","_ref2","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","_Fragment","htmlFor","props","isSearchable","isSortable","pagination","isSelectable","isExpandable","sizePerPageList","otherProps","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","dataTable","useTable","columns","data","initialState","pageSize","hasOwnProperty","hooks","visibleColumns","push","Header","_ref3","getToggleAllPageRowsSelectedProps","Cell","_ref4","row","getToggleRowSelectedProps","_ref5","getToggleAllRowsExpandedProps","isAllRowsExpanded","_ref6","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","page","state","getTableProps","width","getTableBodyProps","map","prepareRow","getRowProps","original","Button","variant","height","borderRadius","fontSize","CustomPagination","tableProps","accessor","sort","text","RoleTable","Card","CustomRoleShowTable","RolesDashboard","newTaskDetails","setNewTaskDetails","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","onClick","newTask","status","queue","dueDate","Date","MidItemBar","React","as","bsPrefix","size","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","href","disabled","displayName","defaultProps","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","arguments","BsComponent","Tag","resolvedPrefix","warning","module","exports"],"sourceRoot":""}