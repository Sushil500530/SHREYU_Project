{"version":3,"file":"static/js/6721.517df372.chunk.js","mappings":"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","sources":["pages/dashboard/Contracts/index.tsx","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// components\r\nimport { Button, Card, Col, Row, } from \"react-bootstrap\";\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport ContractsTable from './ContractsTable';\r\nimport MidItemBar from './MidItemBar';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ContractsDashboard = () => {\r\n\r\n    const [newTaskDetails, setNewTaskDetails] = useState<any>(null);\r\n    // add task \r\n    const newTask = (status: string, queue: string) => {\r\n        setNewTaskDetails({\r\n            dueDate: new Date(),\r\n            //   userAvatar: [defaultAvatar],\r\n            status: status,\r\n            queue: queue,\r\n        });\r\n        // setNewTaskModal(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: \"Dashboard\", path: \"/dashboard/contracts\" },\r\n                    { label: \"Contracts\", path: \"/dashboard/contracts\", active: true },\r\n                ]}\r\n                title={\"Contracts\"}\r\n            />\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <div className=\"float-sm-start\">\r\n                                <label className=\"form-check-label\">\r\n                                    Contracts Table\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"float-sm-end\">\r\n                                <Col className=\"text-sm-end mt-sm-0 mt-2\">\r\n                                    <Button onClick={() => newTask(\"Pending\", \"todoTasks\")}>\r\n                                        <i className=\"uil-plus me-1\"></i>Create\r\n                                    </Button>\r\n                                </Col>\r\n                            </div>\r\n                        </Card.Body>\r\n                        <hr className=\"my-0 mb-3\" />\r\n                        <MidItemBar />\r\n                        <ContractsTable />\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContractsDashboard;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["ContractsDashboard","newTaskDetails","setNewTaskDetails","useState","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","className","Button","onClick","newTask","status","queue","dueDate","Date","MidItemBar","ContractsTable","React","_ref","ref","as","bsPrefix","variant","size","props","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","classNames","concat","href","disabled","displayName","defaultProps","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","arguments","length","undefined","BsComponent","Tag","resolvedPrefix","warning","module","exports"],"sourceRoot":""}