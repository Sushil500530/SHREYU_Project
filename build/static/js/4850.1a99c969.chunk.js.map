{"version":3,"file":"static/js/4850.1a99c969.chunk.js","mappings":"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","sources":["components/Datepicker.tsx","components/PageTitle.tsx","pages/forms/Advanced.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport classNames from \"classnames\";\n\ninterface DatepickerInputProps {\n  onClick?: () => void;\n  value?: string;\n  inputClass: string;\n  children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>(\n  (props, ref) => {\n    const onDateValueChange = () => {\n      console.log(\"date value changed\");\n    };\n    return (\n      <input\n        type=\"text\"\n        className={classNames(\"form-control\", props.inputClass)}\n        onClick={props.onClick}\n        value={props.value}\n        onChange={onDateValueChange}\n        ref={ref}\n      />\n    );\n  }\n);\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<\n  HTMLInputElement,\n  DatepickerInputProps\n>((props, ref) => (\n  <div className=\"input-group input-group-sm\" ref={ref}>\n    <input\n      type=\"text\"\n      className={classNames(\"form-control\", props.inputClass)}\n      onClick={props.onClick}\n      value={props.value}\n      readOnly\n    />\n    <span className=\"input-group-text bg-blue border-blue text-white\">\n      <i className=\"mdi mdi-calendar-range\"></i>\n    </span>\n  </div>\n));\n\ninterface ShreyuDatepickerProps {\n  value?: Date;\n  selectsRange?: boolean;\n  startDate?: Date;\n  endDate?: Date;\n  calendarClassName?: string;\n  onChange: (date: any) => void;\n  hideAddon?: boolean;\n  inputClass?: string;\n  dateFormat?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  showTimeSelect?: boolean;\n  tI?: number;\n  timeCaption?: string;\n  timeFormat?: string;\n  showTimeSelectOnly?: boolean;\n  monthsShown?: number;\n  inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n  // handle custom input\n  const input =\n    (props.hideAddon || false) === true ? (\n      <DatepickerInput inputClass={props.inputClass!} />\n    ) : (\n      <DatepickerInputWithAddon inputClass={props.inputClass!} />\n    );\n\n  return (\n    <>\n      {/* date picker control */}\n      <DatePicker\n        calendarClassName={props.calendarClassName || \"shadow\"}\n        selectsRange={props.selectsRange}\n        startDate={props.startDate}\n        endDate={props.endDate}\n        selected={props.value}\n        onChange={(date) => props.onChange(date)}\n        customInput={input}\n        timeIntervals={props.tI}\n        showTimeSelect={props.showTimeSelect}\n        timeFormat={props.timeFormat || \"hh:mm a\"}\n        timeCaption={props.timeCaption}\n        dateFormat={props.dateFormat || \"MM/dd/yyyy\"}\n        minDate={props.minDate}\n        maxDate={props.maxDate}\n        monthsShown={props.monthsShown}\n        showTimeSelectOnly={props.showTimeSelectOnly}\n        inline={props.inline}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default ShreyuDatepicker;\n","import React from \"react\";\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\n\ninterface BreadcrumbItems {\n  label: string;\n  path: string;\n  active?: boolean;\n}\n\ninterface PageTitleProps {\n  breadCrumbItems: Array<BreadcrumbItems>;\n  title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"page-title-box\">\n          <h4 className=\"page-title\">{props.title}</h4>\n          <div className=\"page-title-right\">\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\n              <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n              {(props.breadCrumbItems || []).map((item, index) => {\n                return item.active ? (\n                  <Breadcrumb.Item active key={index}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                ) : (\n                  <Breadcrumb.Item key={index} href={item.path}>\n                    {item.label}\n                  </Breadcrumb.Item>\n                );\n              })}\n            </Breadcrumb>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default PageTitle;\n","import React, { useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport MaskedInput from \"react-text-mask\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport ShreyuDatepicker from \"../../components/Datepicker\";\n\nconst ReactSelect = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to={{ pathname: \"https://github.com/JedWatson/react-select\" }}\n            target=\"_blank\"\n          >\n            React select\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n        <p className=\"text-muted fs-14\">React-Select based Select element</p>\n        <Select\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n        ></Select>\n\n        <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n        <p className=\"text-muted fs-14\">\n          React-Select based Select (Multiple) element\n        </p>\n        <Select\n          isMulti={true}\n          options={[\n            { value: \"chocolate\", label: \"Chocolate\" },\n            { value: \"strawberry\", label: \"Strawberry\" },\n            { value: \"vanilla\", label: \"Vanilla\" },\n          ]}\n          className=\"react-select react-select-container\"\n          classNamePrefix=\"react-select\"\n        ></Select>\n      </Card.Body>\n    </Card>\n  );\n};\n\ninterface OptionTypes {\n  id: number | string;\n  value: string;\n  label: string;\n}\nconst Typeaheads = () => {\n  const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n  const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n  const options: Array<OptionTypes> = [\n    { id: 1, value: \"chocolate\", label: \"Chocolate\" },\n    { id: 2, value: \"strawberry\", label: \"Strawberry\" },\n    { id: 3, value: \"vanilla\", label: \"Vanilla\" },\n  ];\n\n  const onChangeSingleSelection = (selected: OptionTypes[]) => {\n    setSingleSelections(selected);\n  };\n\n  const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n    setMultiSelections(selected);\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">\n          <Link\n            rel=\"noreferrer\"\n            to={{\n              pathname: \"http://ericgio.github.io/react-bootstrap-typeahead/\",\n            }}\n            target=\"_blank\"\n          >\n            Typeahead\n          </Link>\n        </h4>\n        <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n        <p className=\"text-muted fs-14\">Typeahead based Select element</p>\n        <Typeahead\n          id=\"select2\"\n          labelKey={\"label\"}\n          multiple={false}\n          onChange={onChangeSingleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={singleSelections}\n        />\n\n        <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n        <p className=\"text-muted fs-14\">\n          Typeahead based Select (Multiple) element\n        </p>\n        <Typeahead\n          id=\"select3\"\n          labelKey=\"label\"\n          multiple\n          onChange={onChangeMultipleSelection}\n          options={options}\n          placeholder=\"Choose a state...\"\n          selected={multiSelections}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst DatePickers = () => {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  /*\n   * handle date change\n   */\n  const onDateChange = (date: Date) => {\n    if (date) {\n      setSelectedDate(date);\n    }\n  };\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n        <p className=\"text-muted fs-14\">\n          A simple date picker using{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            to={{ pathname: \"https://reactdatepicker.com/\" }}\n          >\n            ReactJS Datepicker\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Single Date</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">\n                Single Date with multiple months\n              </label>{\" \"}\n              <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                monthsShown={2}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Custom date format</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                dateFormat=\"yyyy-MM-dd\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Specific date range</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                minDate={new Date()}\n                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select Time</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                showTimeSelect\n                timeFormat=\"HH:mm\"\n                tI={60}\n                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                timeCaption=\"time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time only</label> <br />\n              <ShreyuDatepicker\n                hideAddon={true}\n                showTimeSelect\n                showTimeSelectOnly\n                tI={60}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                value={selectedDate}\n                onChange={(date) => {\n                  onDateChange(date);\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst InputMasks = () => {\n  return (\n    <Card>\n      <Card.Body>\n        <h4 className=\"header-title\">Input Masks</h4>\n        <p className=\"text-muted fs-14\">\n          Input masks by{\" \"}\n          <Link\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            to={{\n              pathname:\n                \"https://github.com/text-mask/text-mask/tree/master/react#readme\",\n            }}\n          >\n            react-text-mask\n          </Link>\n        </p>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Phone Number with Area Code</label>{\" \"}\n              <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(__) ____-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">US Phone Number</label> <br />\n              <MaskedInput\n                mask={[\n                  \"(\",\n                  /[1-9]/,\n                  /\\d/,\n                  /\\d/,\n                  \")\",\n                  \" \",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  \"-\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"(___) ___-____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Date</label> <br />\n              <MaskedInput\n                mask={[\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  \"/\",\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                  /\\d/,\n                ]}\n                placeholder=\"__/__/____\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n          <Col lg={6}>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Time</label> <br />\n              <MaskedInput\n                mask={[/\\d/, /\\d/, \":\", /\\d/, /\\d/, \":\", /\\d/, /\\d/]}\n                placeholder=\"__:__:__\"\n                className=\"form-control\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nconst FormAdvanced = () => {\n  return (\n    <React.Fragment>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Forms\", path: \"/forms/advanced\" },\n          { label: \"Form Advanced\", path: \"/forms/advanced\", active: true },\n        ]}\n        title={\"Form Advanced\"}\n      />\n\n      <Row>\n        <Col lg={6}>\n          <ReactSelect />\n        </Col>\n        <Col lg={6}>\n          <Typeaheads />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <DatePickers />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <InputMasks />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default FormAdvanced;\n"],"names":["DatepickerInput","forwardRef","props","ref","_jsx","type","className","classNames","inputClass","onClick","value","onChange","onDateValueChange","console","log","DatepickerInputWithAddon","_jsxs","children","readOnly","input","hideAddon","_Fragment","DatePicker","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","Row","Col","title","Breadcrumb","listProps","href","breadCrumbItems","map","item","index","active","label","path","ReactSelect","Card","Link","rel","to","pathname","target","Select","classNamePrefix","options","isMulti","Typeaheads","singleSelections","setSingleSelections","useState","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","placeholder","DatePickers","selectedDate","setSelectedDate","Date","onDateChange","lg","ShreyuDatepicker","setDate","getDate","InputMasks","MaskedInput","mask","FormAdvanced","React","PageTitle"],"sourceRoot":""}