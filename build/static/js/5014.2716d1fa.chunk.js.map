{"version":3,"file":"static/js/5014.2716d1fa.chunk.js","mappings":"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","sources":["pages/apps/Email/Inbox.tsx","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Card,\n  Dropdown,\n  ButtonGroup,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\n// components\nimport PageTitle from \"../../../components/PageTitle\";\n\nimport LeftBar from \"./LeftBar\";\n\n// dafault data\nimport { emails as mails, chatUsers } from \"./data\";\n\nconst Email = ({ email }: { email: EmailItems }) => {\n  return (\n    <li className={classNames({ unread: !email.is_read })}>\n      <div className=\"col-mail col-mail-1\">\n        <div className=\"checkbox-wrapper-mail\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id={\"mail\" + email.id}\n          />\n          <label className=\"toggle\" htmlFor={\"mail\" + email.id}></label>\n        </div>\n        <span\n          className={classNames(\"star-toggle\", \"uil\", \"uil uil-star\", {\n            \"text-warning\": email.is_important,\n          })}\n        ></span>\n        <Link to=\"/apps/email/details\" className=\"title\">\n          {email.from_name}\n          {email.number_of_reply > 1 && <span> ({email.number_of_reply})</span>}\n        </Link>\n      </div>\n      <div className=\"col-mail col-mail-2\">\n        <Link to=\"/apps/email/details\" className=\"subject\">\n          {email.subject} &nbsp;&ndash;&nbsp;\n          <span className=\"teaser\">{email.teaser}</span>\n        </Link>\n        <div className=\"date\">{email.time}</div>\n      </div>\n    </li>\n  );\n};\n\ninterface EmailItems {\n  id: number;\n  from_name: string;\n  from_email: string;\n  subject: string;\n  teaser: string;\n  number_of_reply: number;\n  is_important: boolean;\n  is_read: boolean;\n  time: string;\n  date: string;\n}\n\n// Inbox\nconst Inbox = () => {\n  const [emails] = useState<Array<EmailItems>>(mails);\n  const [totalEmails] = useState<number>(mails.length);\n  const [startIndex, setStartIndex] = useState<number>(1);\n  const [endIndex, setEndIndex] = useState<number>(20);\n  const [totalUnreadEmails] = useState<number>(\n    mails.filter((e: any) => e.is_read === false).length\n  );\n\n  const unreadEmails = emails.filter((email) => !email.is_read);\n  const importantEmails = emails.filter((email) => email.is_important);\n  const otherEmails = emails.filter(\n    (email) => email.is_read && !email.is_important\n  );\n\n  /**\n   * get start index for other emails\n   */\n  const getStartIndex = useCallback(\n    (index) => {\n      let start = index - 1;\n      if (start === 0) {\n        return start;\n      } else {\n        return start - unreadEmails.length - importantEmails.length;\n      }\n    },\n    [unreadEmails.length, importantEmails.length]\n  );\n\n  /**\n   * get end index for other emails\n   */\n  const getEndIndex = useCallback(\n    (index) => {\n      let end = index;\n      return end - unreadEmails.length - importantEmails.length;\n    },\n    [importantEmails.length, unreadEmails.length]\n  );\n\n  const [emailList, setEmailList] = useState<EmailItems[]>(\n    otherEmails.slice(getStartIndex(startIndex), getEndIndex(endIndex))\n  );\n\n  /**\n   * Gets the next page\n   */\n  const getNextPage = () => {\n    const startIdx = startIndex + 20;\n    const endIdx = endIndex + 20;\n    setStartIndex(startIdx);\n    setEndIndex(endIdx);\n    setEmailList(\n      otherEmails.slice(getStartIndex(startIdx), getEndIndex(endIdx))\n    );\n  };\n\n  /**\n   * Gets the prev page\n   */\n  const getPrevPage = () => {\n    const startIdx = startIndex - 20;\n    const endIdx = endIndex - 20;\n    setStartIndex(startIdx);\n    setEndIndex(endIdx);\n    setEmailList(\n      otherEmails.slice(getStartIndex(startIdx), getEndIndex(endIdx))\n    );\n  };\n\n  return (\n    <>\n      <PageTitle\n        breadCrumbItems={[\n          { label: \"Email\", path: \"/apps/email/inbox\" },\n          { label: \"Email Inbox\", path: \"/apps/email/inbox\", active: true },\n        ]}\n        title={\"Email Inbox\"}\n      />\n\n      <Row>\n        <Col>\n          <div className=\"email-container bg-transparent\">\n            <Card className=\"inbox-leftbar\">\n              <Link to=\"/apps/email/compose\" className=\"btn btn-danger d-block\">\n                Compose\n              </Link>\n              <LeftBar\n                totalUnreadEmails={totalUnreadEmails}\n                chatUsers={chatUsers}\n              />\n            </Card>\n            <div className=\"inbox-rightbar\">\n              <ButtonGroup className=\"mb-2 me-1\">\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"archived\">Archived</Tooltip>}\n                >\n                  {({ ref, ...triggerHandler }) => (\n                    <Button ref={ref} {...triggerHandler} variant=\"light\">\n                      <i className=\"uil uil-archive-alt\"></i>\n                    </Button>\n                  )}\n                </OverlayTrigger>\n                <Button variant=\"light\">\n                  <OverlayTrigger\n                    placement=\"top\"\n                    overlay={<Tooltip id=\"spam\">Spam</Tooltip>}\n                  >\n                    <i className=\"uil uil-exclamation-octagon\"></i>\n                  </OverlayTrigger>\n                </Button>\n                <OverlayTrigger\n                  placement=\"top\"\n                  overlay={<Tooltip id=\"delete\">Delete</Tooltip>}\n                >\n                  <Button variant=\"light\">\n                    <i className=\"uil uil-trash-alt\"></i>\n                  </Button>\n                </OverlayTrigger>\n              </ButtonGroup>\n\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={<Tooltip id=\"folder\">Folder</Tooltip>}\n              >\n                <Dropdown className=\"btn-group mb-2 me-1\">\n                  <Dropdown.Toggle className=\"btn btn-light\">\n                    <i className=\"uil uil-folder\"></i>{\" \"}\n                    <i className=\"uil uil-angle-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Header>Move to :</Dropdown.Header>\n                    <Dropdown.Item>Social</Dropdown.Item>\n                    <Dropdown.Item>Promotions</Dropdown.Item>\n                    <Dropdown.Item>Updates</Dropdown.Item>\n                    <Dropdown.Item>Forums</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement=\"top\"\n                overlay={<Tooltip id=\"labels\">Labels</Tooltip>}\n              >\n                <Dropdown className=\"btn-group mb-2 me-1\">\n                  <Dropdown.Toggle className=\"btn btn-light\">\n                    <i className=\"uil uil-label\"></i>{\" \"}\n                    <i className=\"uil uil-angle-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Header>Label as:</Dropdown.Header>\n                    <Dropdown.Item>Social</Dropdown.Item>\n                    <Dropdown.Item>Promotions</Dropdown.Item>\n                    <Dropdown.Item>Updates</Dropdown.Item>\n                    <Dropdown.Item>Forums</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </OverlayTrigger>\n\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={<Tooltip id=\"more actions\">More Actions</Tooltip>}\n              >\n                <Dropdown className=\"btn-group mb-2\">\n                  <Dropdown.Toggle className=\"btn btn-light\">\n                    <i className=\"uil uil-ellipsis-h fs-13\"></i> More{\" \"}\n                    <i className=\"uil uil-angle-down\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Header>More Options :</Dropdown.Header>\n                    <Dropdown.Item>Mark as Unread</Dropdown.Item>\n                    <Dropdown.Item>Add to Tasks</Dropdown.Item>\n                    <Dropdown.Item>Add Star</Dropdown.Item>\n                    <Dropdown.Item>Mute</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </OverlayTrigger>\n\n              <div className=\"d-inline-block align-middle float-lg-end\">\n                <Row>\n                  <Col xs={8} className=\"align-self-center\">\n                    Showing {startIndex} - {endIndex} of {totalEmails}\n                  </Col>\n                  <Col xs={4}>\n                    <ButtonGroup className=\"float-end\">\n                      {startIndex === 1 ? (\n                        <Button variant=\"white\" className=\"btn-sm\" disabled>\n                          <i className=\"uil uil-angle-left\"></i>\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"primary\"\n                          className=\"btn-sm\"\n                          onClick={getPrevPage}\n                        >\n                          <i className=\"uil uil-angle-left\"></i>\n                        </Button>\n                      )}\n                      {endIndex !== totalEmails ? (\n                        <Button\n                          variant=\"primary\"\n                          className=\"btn-sm\"\n                          onClick={getNextPage}\n                        >\n                          <i className=\"uil uil-angle-right\"></i>\n                        </Button>\n                      ) : (\n                        <Button variant=\"white\" className=\"btn-sm\" disabled>\n                          <i className=\"uil uil-angle-right\"></i>\n                        </Button>\n                      )}\n                    </ButtonGroup>\n                  </Col>\n                </Row>\n              </div>\n\n              <div className=\"mt-2\">\n                {startIndex === 1 && (\n                  <>\n                    {\" \"}\n                    <h5 className=\"mt-3 mb-2 fs-16\">Unread</h5>\n                    <ul className=\"message-list\">\n                      {(unreadEmails || []).map((email, idx) => {\n                        return <Email email={email} key={idx} />;\n                      })}\n                    </ul>\n                    <h5 className=\"mt-4 mb-2 fs-16\">Important</h5>\n                    <ul className=\"message-list\">\n                      {(importantEmails || []).map((email, idx) => {\n                        return <Email email={email} key={idx} />;\n                      })}\n                    </ul>\n                  </>\n                )}\n                <h5\n                  className={classNames(\n                    \"mb-2\",\n                    \"fs-16\",\n                    startIndex === 1 ? \"mt-4\" : \"mt-3\"\n                  )}\n                >\n                  Everything Else\n                </h5>\n                <ul className=\"message-list\">\n                  {(emailList || []).map((email, idx) => {\n                    return <Email email={email} key={idx} />;\n                  })}\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"clearfix\"></div>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Inbox;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["Email","_ref","email","_jsxs","className","classNames","unread","is_read","children","_jsx","type","id","htmlFor","is_important","Link","to","from_name","number_of_reply","subject","teaser","time","Inbox","emails","useState","mails","totalEmails","startIndex","setStartIndex","endIndex","setEndIndex","totalUnreadEmails","e","length","unreadEmails","filter","importantEmails","otherEmails","getStartIndex","useCallback","index","start","getEndIndex","emailList","setEmailList","slice","_Fragment","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","Card","LeftBar","chatUsers","ButtonGroup","OverlayTrigger","placement","overlay","Tooltip","_ref2","ref","triggerHandler","Button","variant","Dropdown","xs","disabled","onClick","getPrevPage","startIdx","endIdx","getNextPage","map","idx","React","bsPrefix","size","vertical","as","Component","rest","prefix","useBootstrapPrefix","baseClass","concat","displayName","defaultProps","role","CardImg","props","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","context","p"],"sourceRoot":""}